apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ci-jenkins
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}-jenkins
    helm.sh/chart: {{ .Chart.Version | quote }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: ArgoCD
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: jenkins
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: tools
    server: {{ .Values.spec.destination.server }}
  source:
    repoURL: 'https://codecentric.github.io/helm-charts'
    targetRevision: {{ .Values.jenkins.targetRevision | quote }}
    chart: jenkins
    helm:
      values: |
        fullnameOverride: ci-jenkins

        image:
          tag: 2.245-alpine

        extraEnv: |
          - name: JENKINS_OPTS
            value: "--prefix=/tools/ci/jenkins"

        resources: 
          requests:
            cpu: 1
            memory: 512Mi
          limits:
            cpu: 2
            memory: 1Gi

        ingress:
          enabled: true
          annotations:
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          paths:
          - /tools/ci/jenkins
          hosts:
          - hq.know-ops.com
          tls:
          - secretName: argocd-secret
            hosts:
            - hq.know-ops.com

        livenessProbe:
          httpGet:
            path: /tools/ci/jenkins/login
            port: http
          initialDelaySeconds: 90

        readinessProbe:
          httpGet:
            path: /tools/ci/jenkins/login
            port: http
          initialDelaySeconds: 15

        serviceAccount:
          master:
            create: true

          k8s-agent:
            create: true
            name: jenkins-agent

        casc:
          existingSecret: jenkins-casc
          secrets:
            GITHUB_SECRET: ""

        rbac:
          master:
            create: true
            rules:
              - apiGroups: [""]
                resources: ["pods", "pods/exec"]
                verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
              - apiGroups: [""]
                resources: ["pods/log", "secrets", "events"]
                verbs: ["get", "list", "watch"]

          k8s-agent:
            create: true

        referenceContent:
          - data:
            - fileName: plugins.txt
              fileContent: |
                configuration-as-code
                workflow-aggregator
                kubernetes
                kubernetes-credentials-provider
                timestamper
                locale
                job-dsl
                github
                github-api
                github-branch-source
                github-pr-coverage-status
                github-coverage-reporter
                github-issues
                github-oauth
                blueocean
                authorize-project
                greenballs

            - fileName: jenkins.yaml
              fileContent: |
                jenkins:
                  authorizationStrategy:
                    github:
                      adminUserNames: "stormmore"
                      allowAnonymousJobStatusPermission: false
                      allowAnonymousReadPermission: false
                      allowCcTrayPermission: false
                      allowGithubWebHookPermission: false
                      authenticatedUserCreateJobPermission: false
                      authenticatedUserReadPermission: false
                      organizationNames: "know-ops"
                      useRepositoryPermissions: true
                  securityRealm:
                    github:
                      githubWebUri: "https://github.com"
                      githubApiUri: "https://api.github.com"
                      clientID: "cc741ddf246abb150ec5"
                      clientSecret: "${GITHUB_SECRET}"
                      oauthScopes: "read:org,user:email"
                  numExecutors: 0
                  remotingSecurity:
                    enabled: true
                  crumbIssuer:
                    standard:
                      excludeClientIPFromCrumb: false
                  clouds:
                    - kubernetes:
                        name: kubernetes
                        serverUrl: https://kubernetes.default
                        namespace: {{ .Release.Namespace }}
                        jenkinsUrl: http://ci-jenkins-master:8080/tools/ci/jenkins
                        jenkinsTunnel: ci-jenkins-agent:50000
                        templates:
                          - name: k8s-gradle-jdk8-agent
                            idleMinutes: 1
                            namespace: {{ .Release.Namespace }}
                            nodeUsageMode: NORMAL
                            serviceAccount: jenkins-agent
                            label: k8s-gradle-jdk8-agent
                            containers:
                              - name: gradle
                                image: gradle:6.3.0-jdk8
                                ttyEnabled: true
                                args: "cat"
                                command: "/bin/sh -c"
                          - name: k8s-gradle-jdk11-agent
                            idleMinutes: 1
                            namespace: {{ .Release.Namespace }}
                            nodeUsageMode: NORMAL
                            serviceAccount: jenkins-agent
                            label: k8s-gradle-jdk11-agent
                            containers:
                              - name: gradle
                                image: gradle:6.3.0-jdk11
                                ttyEnabled: true
                                args: "cat"
                                command: "/bin/sh -c"
                          - name: k8s-gradle-jdk14-agent
                            idleMinutes: 1
                            namespace: {{ .Release.Namespace }}
                            nodeUsageMode: NORMAL
                            serviceAccount: jenkins-agent
                            label: k8s-gradle-jdk14-agent
                            containers:
                              - name: gradle
                                image: gradle:6.3.0-jdk14
                                ttyEnabled: true
                                args: "cat"
                                command: "/bin/sh -c"
                          - name: k8s-openjdk8-agent
                            idleMinutes: 1
                            namespace: {{ .Release.Namespace }}
                            nodeUsageMode: NORMAL
                            serviceAccount: jenkins-agent
                            label: k8s-openjdk8-agent
                            containers:
                              - name: openjdk
                                image: openjdk:8-alpine
                                ttyEnabled: true
                                args: "cat"
                                command: "/bin/sh -c"
                          - name: k8s-openjdk11-agent
                            idleMinutes: 1
                            namespace: {{ .Release.Namespace }}
                            nodeUsageMode: NORMAL
                            serviceAccount: jenkins-agent
                            label: k8s-openjdk11-agent
                            containers:
                              - name: openjdk
                                image: openjdk:11
                                ttyEnabled: true
                                args: "cat"
                                command: "/bin/sh -c"
                          - name: k8s-openjdk14-agent
                            idleMinutes: 1
                            namespace: {{ .Release.Namespace }}
                            nodeUsageMode: NORMAL
                            serviceAccount: jenkins-agent
                            label: k8s-openjdk14-agent
                            containers:
                              - name: openjdk
                                image: openjdk:14-alpine
                                ttyEnabled: true
                                args: "cat"
                                command: "/bin/sh -c"
                          - name: k8s-project-agent
                            idleMinutes: 1
                            namespace: {{ .Release.Namespace }}
                            nodeUsageMode: NORMAL
                            serviceAccount: jenkins-agent
                            label: k8s-project-agent
                            containers:
                              - name: linguist
                                image: crazymax/linguist:7.9.0
                                ttyEnabled: true
                                args: "cat"
                                command: "/bin/sh -c"

                security:
                  queueItemAuthenticator:
                    authenticators:
                    - global:
                        strategy: "triggeringUsersAuthorizationStrategy"
                unclassified:
                  buildDiscarders:
                    configuredBuildDiscarders:
                    - "jobBuildDiscarder"
                    - simpleBuildDiscarder:
                        discarder:
                          logRotator:
                            artifactDaysToKeepStr: "7"
                            artifactNumToKeepStr: "10"
                            daysToKeepStr: "7"
                            numToKeepStr: "10"
                  location:
                    adminAddress: "Tools Engineering <tools@know-ops.com>"
                    url: "https://hq.know-ops.com/tools/ci/jenkins"
                  gitSCM:
                      createAccountBasedOnEmail: false
                      globalConfigEmail: "tools-ci-github@know-ops.com"
                      globalConfigName: "Tools CI Bot"
                      showEntireCommitSummaryInChanges: false
                      useExistingAccountWithSameEmail: false
                  defaultFolderConfiguration:
                    healthMetrics:
                    - worstChildHealthMetric:
                        recursive: true
                    - "primaryBranchHealthMetric"
                  gitHubConfiguration:
                    apiRateLimitChecker: ThrottleForNormalize
                  gitHubPluginConfig:
                    configs:
                    - clientCacheSize: 200
                      credentialsId: "jenkins-github-token"
                      name: "Public Github"
                  globalLibraries:
                    libraries:
                    - defaultVersion: "master"
                      name: "jenkins-shared-library"
                      retriever:
                        modernSCM:
                          scm:
                            github:
                              configuredByUrl: true
                              credentialsId: "jenkins-github-user-token"
                              repoOwner: "know-ops"
                              repository: "jenkins-shared-library"
                              repositoryUrl: "https://github.com/know-ops/jenkins-shared-library.git"
                              traits:
                              - gitHubBranchDiscovery:
                                  strategyId: 1
                              - gitHubPullRequestDiscovery:
                                  strategyId: 1
                              - gitHubForkDiscovery:
                                  strategyId: 1
                                  trust: "gitHubTrustPermissions"
                jobs:
                - script: |
                    organizationFolder('ko-development') {
                      description('This contains branch source jobs Know Ops Internal Development')
                      displayName('Know Ops - Development')
                      triggers {

                        periodicFolderTrigger {
                          interval('1h')
                        }

                      }

                      organizations {

                        github {
                          repoOwner("know-ops")
                          apiUri("https://api.github.com")
                          credentialsId('jenkins-github-user-token')
                          traits {

                            publicRepoPullRequestFilterTrait()

                          }

                        }

                      }

                      properties {

                        folderLibraries {

                          libraries {

                            libraryConfiguration {

                              name('jenkins-shared-library')

                              retriever {

                                modernSCM {

                                  scm {

                                    github {

                                      configuredByUrl(true)
                                      credentialsId('jenkins-github-user-token')
                                      repoOwner('know-ops')
                                      repository('jenkins-shared-library')
                                      repositoryUrl('http://github.com/know-ops/jenkins-shared-library.git')

                                    }

                                  }

                                }

                              }

                            }

                          }

                        }

                      }

                      configure {

                          def traits = it / navigators / 'org.jenkinsci.plugins.github__branch__source.GitHubSCMNavigator' / traits

                          traits << 'org.jenkinsci.plugins.github_branch_source.BranchDiscoveryTrait' {

                              strategyId 1

                          }

                          traits << 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait' {

                              strategyId 1
                              trust(class: 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait$TrustPermission')

                          }

                          traits << 'org.jenkinsci.plugins.github__branch__source.OriginPullRequestDiscoveryTrait' {

                              strategyId 1

                          }

                          traits << 'jenkins.scm.impl.trait.WildcardSCMHeadFilterTrait' {

                            includes "bugfix/* hotfix/* feature/*"
                            excludes ""

                          }

                      }

                      projectFactories {

                        workflowMultiBranchProjectFactory {

                          // Relative location within the checkout of your Pipeline script.
                          scriptPath(".jenkins/pipelines/development.groovy")

                        }

                      }

                    }
                - script: |
                    organizationFolder('ko-client') {
                      description('This contains branch source jobs for Know Ops client work')
                      displayName('Know Ops - Client')
                      triggers {

                        periodicFolderTrigger {
                          interval('1h')
                        }

                      }

                      organizations {

                        github {
                          repoOwner("know-ops")
                          apiUri("https://api.github.com")
                          credentialsId('jenkins-github-user-token')
                          traits {
                            gitHubBranchDiscovery {
                              strategyId(1)
                            }
                            gitHubPullRequestDiscovery {
                              strategyId(1)
                            }
                            publicRepoPullRequestFilterTrait()
                            headWildcardFilter {
                              includes 'master bugfix/* hotfix/* feature/* release/*'
                              excludes ''
                            }

                          }


                        }

                      }

                      properties {

                        folderLibraries {

                          libraries {

                            libraryConfiguration {

                              name('shared-library')

                              retriever {

                                modernSCM {

                                  scm {

                                    github {

                                      configuredByUrl(true)
                                      credentialsId('jenkins-github-user-token')
                                      repoOwner('know-ops')
                                      repository('svb-jenkins-shared-library')
                                      repositoryUrl('http://github.com/know-ops/svb-jenkins-shared-library.git')

                                    }

                                  }

                                }

                              }

                            }

                          }

                        }

                      }

                      configure {

                          def traits = it / navigators / 'org.jenkinsci.plugins.github__branch__source.GitHubSCMNavigator' / traits

                          traits << 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait' {

                              strategyId 1
                              trust(class: 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait$TrustPermission')

                          }

                          traits << 'jenkins.plugins.git.traits.LocalBranchTrait' {}

                      }

                      projectFactories {

                        workflowMultiBranchProjectFactory {

                          // Relative location within the checkout of your Pipeline script.
                          scriptPath("Jenkinsfile")

                        }

                      }

                    }

          - relativeDir: init.groovy.d
            data:
            - fileName: init.groovy
              fileContent: |
                import hudson.plugins.locale.PluginImpl
                import jenkins.model.Jenkins
                import net.sf.json.JSONObject
                println 'Running custom Groovy init script...'
                def jenkins = Jenkins.get()
                println 'Disabling localizatzion...'
                def localePlugin = jenkins.getPlugin(PluginImpl)
                JSONObject json = new JSONObject()
                json.put('systemLocale', 'en_US')
                json.put('ignoreAcceptLanguage', true)
                localePlugin.configure(null, json)
                localePlugin.save()
                println 'Disabling usage statistics...'
                jenkins.setNoUsageStatistics(true)
                println 'Saving changes...'
                jenkins.save()
  project: {{ .Values.spec.project }}
  syncPolicy:
    automated: 
      selfHeal: true
  ignoreDifferences:
  - group: apps
    kind: Deployment
    jsonPointers:
    - /spec/revisionHistoryLimit