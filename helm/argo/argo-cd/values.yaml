  fullnameOverride: cd-argocd
  installCRDs: true

  server:
    extraArgs:
    - --rootpath
    - /tools/cd/argocd
    - --basehref
    - /tools/cd/argocd

    ingress:
      enabled: true

      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

      hosts:
      - hq.know-ops.com

      tls:
      - hosts:
        - hq.know-ops.com
        secretName: argocd-server-tls

      paths:
      - /tools/cd/argocd

      https: false

    certificate:
      enabled: true
      domain: hq.know-ops.com
      issuer:
        kind: ClusterIssuer
        name: letsencrypt-prod

    config:
      url: https://hq.know-ops.com/tools/cd/argocd

      admin.enabled: "false"

      users.anonymous.enabled: "true"

      dex.config: |
        connectors:
          # GitHub example
          - type: github
            id: github
            name: GitHub
            config:
              clientID: 37f595427919977080dd
              clientSecret: $dex.github.clientSecret
              orgs:
              - name: know-ops

      repositories: |
        - url: git@github.com:know-ops/infra-hq.git
          sshPrivateKeySecret:
            name: argocd-repository-credentials
            key: infra-hq
          name: infra-hq
        - type: helm
          url: https://argoproj.github.io/argo-helm
          name: argo
        - type: helm
          url: https://codecentric.github.io/helm-charts
          name: codecentric
        - type: helm
          url: https://charts.jetstack.io
          name: jetstack
        - type: helm
          url: https://charts.gitlab.io
          name: gitlab
        - type: helm
          url: https://kubernetes-sigs.github.io/metrics-server
          name: metrics-server

    rbacConfig:
      policy.default: 'role:readonly'
      policy.csv: |
        g, know-ops:admin, role:admin
      scopes: '[groups]'

  configs:
    secret:
      # Enable only on initial deployment
      createSecret: false
